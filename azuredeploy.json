{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The administrator username of the SQL logical server."
      }
    },
    "productApiDbServerName": {
      "defaultValue": "mango-service-productapidbserver",
      "type": "string"
    },
    "sqlDBName": {
      "type": "string",
      "defaultValue": "Mango.Service.ProductAPI_db",
      "metadata": {
        "description": "The name of the SQL Database."
      }
    },
    "serverfarmsMangoPlanName": {
        "defaultValue": "mango-plan",
        "type": "string"
    },
    "sitesMangoProductApiDevName": {
        "defaultValue": "mango-ProductApi-dev",
        "type": "string"
    },
    "storageAccountBlobContainerName": {
      "type": "string",
      "defaultValue": "mango-product",
      "metadata": {
        "description": "The storage account name."
      }
    },
    "productIdentityName": {
      "type": "string",
      "defaultValue": "mango-product-identity",
      "metadata": {
        "description": "The product identity name for az key vault access."
      }
    },
    "appConfigurationName": {
      "type": "string",
      "defaultValue": "mango-restaurant-configuration",
      "metadata": {
        "description": "The storage account location."
      }
    },
    "vaultName": {
      "type": "string",
      "metadata": {
        "description": "The name of the keyvault that contains the secret."
      }
    },
    "administratorDbServerPasswordName": {
      "type": "string",
      "defaultValue": "AdministratorDbServerPassword"
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "env": "dev",
        "app": "productApi"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('product', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The storage account name."
      }
    },
    "serverConnection": {
      "type": "string"
    },
    "environment": {
      "type": "string",
      "defaultValue": "Development"
    }
  },
  "variables": {
    "sqlDBNameCalculated": "[format('{0}/{1}', parameters('productApiDbServerName'), parameters('sqlDBName'))]",
    "location": "[resourceGroup().location]",
    "userAssignedIdentity": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{2}', subscription().subscriptionId, resourceGroup().name, parameters('productIdentityName'))]",
    "appConfigurationKeyValues": [
      {
        "key": "ProductBlobStorageName",
        "value": "[parameters('storageAccountName')]",
        "label": "Development",
        "tag": {
          "environment": "dev",
          "app": "product"
        },
        "contentType": "application/vnd.microsoft.appconfig.ff+json;charset=utf-8"
      },
      {
        "key": "ConnectionStrings:Dev:ProductDbConnectionDev",
        "value": "[concat('{\"uri\":\"https://', parameters('vaultName'),'.vault.azure.net/secrets/ProductDbConnectionDev\"}')]",
        "label": "Development",
        "tag": {
          "environment": "dev",
          "app": "product"
        },
        "contentType": "application/vnd.microsoft.appconfig.keyvaultref+json;charset=utf-8"
      }
    ],
    "keyVaultKeyValues": [
      {
        "key": "ProductDbConnectionDev",
        "value": "connectionString"
      },
      {
        "key": "ProductDbConnectionDevPipeline",
        "value": "connectionStringForPipeline"
      }
    ]
  },
  "resources": [
    {
      "name": "serverFarm",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "./WebApp/serverFarms.json"
        },
        "parameters": {
          "serverfarmsMangoPlanName": {
            "value": "[parameters('serverfarmsMangoPlanName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        }
      }
    },
    {
      "name": "productIdentity",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "./ManagedIdentity/productIdentity.json"
        },
        "parameters": {
          "productIdentityName": {
            "value": "[parameters('productIdentityName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        }
      }
    },
    {
      "name": "appConfiguration",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "./AppConfiguration/appConfiguration.json"
        },
        "parameters": {
          "appConfigurationName": {
            "value": "[parameters('appConfigurationName')]"
          },
          "productIdentity": {
            "value": "[variables('userAssignedIdentity')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "keyData": {
            "value": "[variables('appConfigurationKeyValues')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'productIdentity')]",
        "[resourceId('Microsoft.Resources/deployments', 'createSecrets')]"
      ]
    },
    {
      "name": "sqlDb",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "./AzureSql/azureSqlDb.json"
        },
        "parameters": {
          "sqlDBFullName": {
            "value": "[variables('sqlDBNameCalculated')]"
          },
          "sqlDBName": {
            "value": "[parameters('sqlDBName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "administratorLogin": {
            "value": "[parameters('administratorLogin')]"
          },
          "administratorLoginPassword": {
            "reference": {
              "keyVault": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.KeyVault/vaults/', parameters('vaultName'))]"
              },
              "secretName": "[parameters('administratorDbServerPasswordName')]"
            }
          },
          "productApiDbServerName": {
            "value": "[parameters('productApiDbServerName')]"
          },
          "serverConnection": {
            "value": "[parameters('serverConnection')]"
          }
        }
      }
    },
    {
      "name": "createSecrets",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "./AppConfiguration/addSecrets.json"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "keyData": {
            "value": "[variables('keyVaultKeyValues')]"
          },
          "vaultName": {
            "value": "[parameters('vaultName')]"
          },
          "sqlOutput": {
            "value": "[reference('sqlDb').outputs]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'sqlDb')]"
      ]
    },
    {
      "name": "productApi",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "./WebApp/productApiWeb.json"
        },
        "parameters": {
          "serverfarmsMangoPlanName": {
            "value": "[parameters('serverfarmsMangoPlanName')]"
          },
          "sitesMangoProductApiDevName": {
            "value": "[parameters('sitesMangoProductApiDevName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "productIdentity": {
            "value": "[variables('userAssignedIdentity')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "keyData": {
            "value": [
              {
                "name": "connectionstrings",
                "key": "AppConfigConnectionString",
                "value": {
                  "value": "[reference('appConfiguration').outputs.connectionString.value]",
                  "type": "Custom"
                }
              },
              {
                "name": "appsettings",
                "key": "ASPNETCORE_ENVIRONMENT",
                "value": "[parameters('environment')]"
              },
              {
                "name": "appsettings",
                "key": "AZURE_CLIENT_ID",
                "value": "[reference('productIdentity').outputs.assignedIdentityClientId.value]"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'serverFarm')]",
        "[resourceId('Microsoft.Resources/deployments', 'appConfiguration')]",
        "[resourceId('Microsoft.Resources/deployments', 'productIdentity')]"
      ]
    },
    {
      "name": "productBlob",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "relativePath": "./BlobStorage/productBlob.json"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "blobContainerName": {
            "value": "[parameters('storageAccountBlobContainerName')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "blobStorageName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "sqlDBNameCalculated": {
      "type": "string",
      "value": "[variables('sqlDBNameCalculated')]"
    }
  }
}
