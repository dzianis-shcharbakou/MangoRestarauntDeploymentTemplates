# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
#- main

pool:
  vmImage: ubuntu-latest

variables:
- group: ProductApi-dev
- name: isBlobStorageContainImages
  value: true

resources:
  repositories:
  - repository: otherrepo
    type: git
    name: LearnDevOps/MangoRestaurantItems
steps:
- checkout: self
- task: AzureResourceManagerTemplateDeployment@3
  displayName: Deploy Az Key Vault
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'templatesRepository'
    subscriptionId: $(subscriptionId)
    action: 'Create Or Update Resource Group'
    resourceGroupName: $(resourseGroup)
    location: 'West Europe'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/whitechapel5991/MangoRestarauntDeploymentTemplates/main/AppConfiguration/azureKeyVault.json'
    overrideParameters: '-adUserId $(upn) 
-mangoRestaurantKvName $(mangoRestaurantKvName) 
-administratorDbServerLoginPasswordName $(administratorDbServerLoginPasswordName) 
-administratorDbServerLoginPassword $(administratorLoginPassword)'
    deploymentMode: 'Incremental'
    deploymentName: 'DeployMangoKvTemplates'
    deploymentOutputs: 'kvOutputs'
- task: AzureKeyVault@2
  displayName: Use Key Vault
  inputs:
    azureSubscription: 'templatesRepository'
    KeyVaultName: $(mangoRestaurantKvName)
    SecretsFilter: '*'
    RunAsPreJob: false
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'templatesRepository'
    subscriptionId: $(subscriptionId)
    action: 'Create Or Update Resource Group'
    resourceGroupName: $(resourseGroup)
    location: 'West Europe'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/whitechapel5991/MangoRestarauntDeploymentTemplates/main/AzureSql/azureSqlServer.json'
    overrideParameters: '-administratorLogin $(administratorLogin) 
-administratorLoginPassword $(AdministratorDbServerPassword) 
-productApiDbServerName $(productApiDbServerName) 
-startIpAddress  $(startIpAddress) 
-endIpAddress $(endIpAddress)'
    deploymentMode: 'Incremental'
    deploymentName: 'DeployMangoDbServerTemplates'
    deploymentOutputs: 'dbServerOutputs'
  displayName: Deploy DB Server
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $json = '$(kvOutputs)' | convertfrom-json
      $value = $json.keyVaultId.value
      Write-Host "##vso[task.setvariable variable=keyVaultId;]$value"
      $value = $json.administratorDbServerLoginPasswordName.value
      Write-Host "##vso[task.setvariable variable=administratorDbServerLoginPasswordName;]$value"
      $json = '$(dbServerOutputs)' | convertfrom-json
      $value = $json.connectionString.value
      Write-Host "##vso[task.setvariable variable=PRODUCT_DB_SERVER_CONNECTION_STRING;]$value"
  displayName: Parse Az Key Vault Output and Db Output
- task: AzureResourceManagerTemplateDeployment@3
  displayName: Restore infrastructure template
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'templatesRepository'
    subscriptionId: $(subscriptionId)
    action: 'Create Or Update Resource Group'
    resourceGroupName: $(resourseGroup)
    location: 'West Europe'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/whitechapel5991/MangoRestarauntDeploymentTemplates/main/azuredeploy.json'
    overrideParameters: '-administratorLogin $(administratorLogin) 
-productApiDbServerName $(productApiDbServerName) 
-sqlDBName $(sqlDBName) 
-serverfarmsMangoPlanName $(serverfarmsMangoPlanName) 
-sitesMangoProductApiDevName $(sitesMangoProductApiDevName) 
-storageAccountBlobContainerName $(productBlobContainerName) 
-vaultName $(mangoRestaurantKvName) 
-administratorDbServerPasswordName ''$(administratorDbServerLoginPasswordName)'' 
-serverConnection ''$(PRODUCT_DB_SERVER_CONNECTION_STRING)'''
    deploymentMode: 'Incremental'
    deploymentName: 'DeployMangoTemplates'
    deploymentOutputs: 'armOutputs'
- checkout: otherrepo
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $json = '$(armOutputs)' | convertfrom-json
      $value = $json.blobStorageName.value
      Write-Host "##vso[task.setvariable variable=blobStorageName;]$value"
  name: ParseARMOutput
- task: AzureCLI@2
  displayName: Check Images in the Blob storage
  inputs:
    azureSubscription: 'templatesRepository'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo $env:pat | az devops login --organization $env:org
      $objects = az storage blob list -c mango-product --account-name product73oktiews6luy | ConvertFrom-Json
      $result = $objects | where-object {$_.name -in "11.jpg", "12.jpg", "13.jpg", "14.jpg"}
      if ($result.Count -lt 4) {
          Write-Host "##vso[task.setvariable variable=isBlobStorageContainImages;]false"
      }
  env:
    pat: $(PAT)
- task: AzureCLI@2
  condition: eq(variables['isBlobStorageContainImages'], false)
  displayName: Upload Images to Blob storage
  inputs:
    azureSubscription: 'templatesRepository'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az config set extension.use_dynamic_install=yes_without_prompt
      az storage azcopy blob upload -c $(productBlobContainerName) --account-name '$(blobStorageName)' -s $(Build.SourcesDirectory)/MangoRestaurantItems/ProductApiItems/11.jpg  --recursive
      az storage azcopy blob upload -c $(productBlobContainerName) --account-name '$(blobStorageName)' -s $(Build.SourcesDirectory)/MangoRestaurantItems/ProductApiItems/12.jpg  --recursive
      az storage azcopy blob upload -c $(productBlobContainerName) --account-name '$(blobStorageName)' -s $(Build.SourcesDirectory)/MangoRestaurantItems/ProductApiItems/13.jpg  --recursive
      az storage azcopy blob upload -c $(productBlobContainerName) --account-name '$(blobStorageName)' -s $(Build.SourcesDirectory)/MangoRestaurantItems/ProductApiItems/14.jpg  --recursive
- task: AzureCLI@2
  condition: ne(variables['storageAccountName'], variables['blobStorageName'])
  inputs:
    azureSubscription: 'templatesRepository'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo $env:pat | az devops login --organization $env:org
      $objects = az pipelines variable-group list --org $env:org --project $env:project --group-name $env:groupName | ConvertFrom-Json
      $groupId = $objects | Select-Object -First 1 | Select-Object -Property id, variables
      az pipelines variable-group variable update --org $env:org --project $env:project --group-id $groupId.id --name storageAccountName --value $env:blobStorageNameValue
  name: AssignVariableGroupValues
  env:
    org: 'https://dev.azure.com/whitechapel2995/'
    project: 'LearnDevOps'
    groupName: 'ProductApi-dev'
    blobStorageNameValue: '$(blobStorageName)'
    pat: $(PAT)