# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

resources:
  repositories:
  - repository: otherrepo
    type: git
    name: LearnDevOps/MangoRestaurantItems
    # endpoint: repo-for-pipeline
    # ref: main
steps:
- checkout: self
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'templatesRepository'
    subscriptionId: '3b17d851-4b89-4b9f-b4f4-99ccab0432be'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'dev-template-test-rg'
    location: 'West Europe'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/whitechapel5991/MangoRestarauntDeploymentTemplates/main/azuredeploy.json'
    overrideParameters: '-administratorLogin $(administratorLogin) -administratorLoginPassword $(administratorLoginPassword) -productApiDbServerName $(productApiDbServerName) -sqlDBName $(sqlDBName) -serverfarmsMangoPlanName $(serverfarmsMangoPlanName) -sitesMangoProductApiDevName $(sitesMangoProductApiDevName)'
    deploymentMode: 'Incremental'
    deploymentName: 'DeployMangoTemplates'
    deploymentOutputs: 'armOutputs'
- checkout: otherrepo
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $env:GIT_REDIRECT_STDERR = '2>&1'
      git clone git@ssh.dev.azure.com:v3/whitechapel2995/LearnDevOps/MangoRestaurantItems

      ls $(Build.SourcesDirectory)
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $json = '$(armOutputs)' | convertfrom-json
      $value = $json.blobStorageName.value
      Write-Host "##vso[task.setvariable variable=blobStorageName;]$value"
  name: ParseARMOutput
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Blob Storage Name:" $(blobStorageName)
  name: UseBlobStorageName
- checkout: self
- task: AzureCLI@2
  inputs:
    azureSubscription: 'templatesRepository'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      export containerName='$(blobStorageName)'"/default/mango-product"
      echo ${containerName}
      echo ''$(blobStorageName)''

      az config set extension.use_dynamic_install=yes_without_prompt
      # accountkey=`az storage account keys list -n '$(blobStorageName)' --query="[0].value" -o tsv`
      ls
      az storage azcopy blob upload -c mango-product --account-name '$(blobStorageName)' -s /MangoRestaurantItems/ProductApiItems/11.jpg  --recursive
      az storage azcopy blob upload -c mango-product --account-name '$(blobStorageName)' -s /MangoRestaurantItems/ProductApiItems/12.jpg  --recursive
      az storage azcopy blob upload -c mango-product --account-name '$(blobStorageName)' -s /MangoRestaurantItems/ProductApiItems/13.jpg  --recursive
      az storage azcopy blob upload -c mango-product --account-name '$(blobStorageName)' -s /MangoRestaurantItems/ProductApiItems/14.jpg  --recursive

    ContainerName: 'mango-product'